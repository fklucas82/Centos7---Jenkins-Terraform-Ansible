
- name: dnf - Install ad_auth required tools
  dnf: 
    name: realmd,sssd,oddjob,oddjob-mkhomedir,adcli,samba-common-tools,adcli,krb5-workstation
    state: latest
  become: yes
  
- name: Check if machine is bound
  shell: /bin/bash -c "realm list | grep sssd"
  register: realmd_bound
  changed_when: false
  ignore_errors: true
  become: yes

- debug: 
    msg: "{{ realmd_bound }}"

# The SSSD service fails if the template was already joined
# If realm list is populated the playbook leaves the domain and rejoins in the next step
- name: Leave AD if already joined
  shell: /bin/bash -c "/usr/sbin/realm leave {{ domain }}"
  when: realmd_bound is search ("client-software:\ sssd")
  become: yes

- name: Join system to AD
  expect:
    command: /bin/bash -c "/usr/sbin/realm join --user={{ ad_user }} --computer-ou='{{ OU }}' {{ domain }}"
    responses:
      Password for *: "{{ ad_pass }}"
  when: realmd_bound is search ("sssd")
  become: yes

- name: Add line to sssd.conf
  lineinfile: 
    dest: /etc/sssd/sssd.conf
    line: 'default_domain_suffix = {{ domain }}'
    insertafter: '^\[sssd\]'
  notify:
    - restart sssd  
  become: yes

- name: Add override homedir to sssd.conf
  lineinfile: 
    dest: /etc/sssd/sssd.conf
    line: 'override_homedir=/home/%d/%u'
    insertafter: '^\[domain/{{ domain }}\]'
  notify:
    - restart sssd
  become: yes

- name: Make domain home directory
  file:
    path: /home/{{ domain }}
    state: directory
  become: yes

- name: Deny all domain logins
  command: /bin/bash -c "/usr/sbin/realm permit -a {{ domain }}"
  become: yes


- name: Restrict access based on specific ad group
  command: /bin/bash -c "/usr/sbin/realm permit -g {{ item }}@{{ domain }}"
  become: yes
  with_items: "{{ Groups }}"

- name: Add AD group to sudoers
  lineinfile:
    dest: /etc/sudoers
    line: '%{{ item }}@{{ domain }}       ALL=(ALL)       ALL'
    insertafter: '^%wheel'
  become: yes
  with_items: "{{ AdminGroups }}"

